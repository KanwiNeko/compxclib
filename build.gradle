import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Maven to build to the local library
    id 'maven-publish'

    // shadow jar, used to build fat jars
    id 'com.github.johnrengelman.shadow' version '7.1.2'

    // singing for gpg keys
    id 'signing'

    // Documentation generator
    id 'org.jetbrains.dokka' version '1.7.20'
}

String v = 'v0.3-beta'

group = 'gay.kanwi'
version = v

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    //kotlin reflection library
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.31'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
}

wrapper {
    gradleVersion = "7.3.3"
    distributionType = Wrapper.DistributionType.ALL
}

tasks.register('javadocJar', Jar.class) {
    dependsOn(dokkaJavadoc)
    from(dokkaJavadoc)
    archiveClassifier.set("javadoc")
}

tasks.withType(DokkaTask.class).configureEach {
    moduleName.set(project.name)
    println("Configuring ${moduleName}")
    moduleVersion.set(project.version.toString())
    outputDirectory.set(file("build/dokka/$name"))
    failOnWarning.set(false)
    suppressObviousFunctions.set(true)
    suppressInheritedMembers.set(false)
    offlineMode.set(false)
    dokkaSourceSets.configureEach {
        displayName.set(name)
        suppress.set(displayName.get() != "main")
        reportUndocumented.set(false)
        skipEmptyPackages.set(true)
        skipDeprecated.set(false)
        suppressGeneratedFiles.set(true)
        jdkVersion.set(8)
        languageVersion.set("1.8")
        apiVersion.set("1.8")
        noStdlibLink.set(false)
        noJdkLink.set(false)
        noAndroidSdkLink.set(false)
        includes.from(project.files(), "Module.md")
        sourceRoots.from(file("src/main/kotlin"))
        samples.from(project.files(), "src/samples/kotlin/Basic.kt")
        sourceLink {
            localDirectory.set(file("src/main/kotlin"))
            remoteUrl.set(new URL("https://github.com/KatieUmbra/compxclib/tree/main/src/main/kotlin"))
            remoteLineSuffix.set("#L")
        }
    }
}

java {

    //withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'gay.kanwi'
            artifactId = 'compxclib'
            version = v

            from components.java

            pom {
                name = 'CompxCLib'
                description = 'Complex Complete Library is a feature rich complex numbers library for Kotlin and Java '
                url = 'https://github.com/KatieUmbra/compxclib'
                inceptionYear = '2023'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/KatieUmbra/compxclib/blob/main/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'Kanwi'
                        name = 'Katherine Chesterfield'
                        email = 'business@kanwi.gay'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/KatieUmbra/compxclib.git'
                    developerConnection = 'scm:git:ssh://github.com/KatieUmbra/compxclib.git'
                    url = 'https://github.com/KatieUmbra/compxclib'
                }
            }
            repositories {
                maven {
                    name = "OSSRH"
                    url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username = project.properties["ossrhUsername"]
                        password = project.properties["ossrhPassword"]
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}